package com.poynt.core.cardstates;import com.poynt.core.di.CoreComponent;import com.poynt.core.enums.TransactionState;import com.poynt.log.Logger;public class CardProcessingState extends BaseCardState {    private static final String TAG = "CardProcessingState";    private CardProcessingState(){};    private static class LazyCardProcessingStateHolder {        static final CardProcessingState INSTANCE = new CardProcessingState();    }    public static CardProcessingState getInstance() {        return LazyCardProcessingStateHolder.INSTANCE;    }    @Override    protected void injectDependencies() {        CoreComponent.getComponentInstance().inject(this);    }    @Override    public void onStateApplied() {        super.onStateApplied();        Logger.d(TAG, "onStateApplied");        getActionInterface().notifyOnStateEntered(TransactionState.TRANSACTION_IN_PROGRESS);    }    @Override    public void onStateLeft() {        super.onStateLeft();        Logger.d(TAG, "onStateLeft");        getActionInterface().notifyOnStateLeft(TransactionState.TRANSACTION_IN_PROGRESS);    }    @Override    public void showNextEvent() {        launchStateForEventID(TransactionState.TRANSACTION_FINISHED);    }}